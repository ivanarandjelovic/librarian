<project name="librarian" default="dist" basedir=".." xmlns:ivy="antlib:org.apache.ivy.ant">
	<description>
        Main build file for librarian
    </description>
	
	<!-- set global properties for this build -->
	<property file="build/build.properties"/>

	<import file="./build_common.xml"/>
	<import file="./db_build.xml"/>
	
	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${bin.dir}" />
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src.dir}" destdir="${bin.dir}" classpathref="lib.path.id" />
	</target>

	<target name="compile-tests" depends="init" description="compile the tests ">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${bin.dir}" />
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src.test.dir}" destdir="${bin.dir}" classpathref="lib.path.id" />
	</target>

	<target name="compile-all" depends="compile, compile-tests" description="Compile all the sources" />

	<target name="dist" depends="run-unit-tests, create-war" description="generate the distribution">
	</target>

	<target name="full-build" depends="run-all-tests, dist" description="run full build with compilation, testing, packaging, deployment, etc...">
	</target>

	<target name="clean" description="clean up">
		<!-- Delete the ${bin} and ${dist} directory trees -->
		<delete dir="${bin.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${logs.dir}" />
	</target>

	<target name="run-tests" depends="compile-all" description="run tests for the specified folder (in parameter run.test.dir)">
		<mkdir dir="${logs.junit.dir}" />
		<junit dir="${basedir}" haltonfailure="false" printsummary="yes" errorProperty="tests.failed" failureproperty="tests.failed">
			<classpath refid="run.path.id" />
			<batchtest fork="yes" todir="${logs.junit.dir}" unless="testcase">
				<fileset dir="${run.test.dir}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
			<formatter type="plain" usefile="true" />
			<formatter type="xml" usefile="true" />
		</junit>
		<fail if="tests.failed" message="Test(s) failed." />
	</target>

	<target name="run-unit-tests" depends="compile-all" description="run unit tests">
		<antcall target="run-tests">
				<param name="run.test.dir" value="${src.test.unit.dir}"/>
		</antcall>
	</target>

	<target name="run-component-tests" depends="compile-all" description="run component tests">
		<antcall target="run-tests">
				<param name="run.test.dir" value="${src.test.component.dir}"/>
		</antcall>
	</target>

	<target name="run-all-tests" description="run all tests">
		<delete dir="${logs.junit.dir}" />
		<antcall target="run-unit-tests"></antcall>
		<antcall target="run-component-tests"></antcall>
		<antcall target="run-test-reports"></antcall>
	</target>

	<target name="run-test-reports" description="prepare test repots">
		<delete dir="${logs.report.dir}" />
		<mkdir dir="${logs.report.dir}" />
		<junitreport todir="${logs.report.dir}">
			<fileset dir="${logs.junit.dir}">
				<include name="TEST-*.xml" />
				<include name="TEST-*.txt" />
			</fileset>
			<report format="frames" todir="${logs.report.dir}" />
		</junitreport>
	</target>

	<target name="create-war" depends="compile, run-unit-tests" description="create WAR file with the apllication">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist.war.dir}" />

		<war destfile="${dist.war.dir}/librarian.war" webxml="${webinf.dir}/web.xml">
			<lib dir="${lib.dir}" />
			<classes dir="${bin.dir}" />
			<webinf dir="${webinf.dir}">
				<exclude name="web.xml" />
			</webinf>
		</war>
	</target>
	
</project>