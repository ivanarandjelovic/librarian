<project name="librarian" default="dist" basedir=".." xmlns:ivy="antlib:org.apache.ivy.ant">
  <description>
        Main build file for librarian
    </description>

  <!-- set global properties for this build -->
  <property file="build/build.properties" />

  <!-- This is default DB configuration to be used if not specified differently on the command line -->
  <property name="db.configuration" value="test" />

  <import file="./build_common.xml" />
  <import file="./test_build.xml" />
  <import file="./db_build.xml" />

  <!-- Cobertura tasks, for code coverage -->
  <taskdef classpathref="run.cobertura.path.id" resource="tasks.properties" />

  <var name="global.tests.failed" value="false" />

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp />
  </target>

  <target name="clean" description="clean up">
    <delete dir="${bin.dir}" />
    <delete dir="${dist.dir}" />
    <delete dir="${report.dir}" />
  </target>

  <!-- compile all te sources -->
  <target name="compile" depends="init">
    <mkdir dir="${bin.app.dir}" />
    <javac debug="true"
           srcdir="${src.app.dir}"
           destdir="${bin.app.dir}"
           classpathref="lib.app.path.id"
           includeantruntime="false" />
    <mkdir dir="${bin.util.dir}" />
    <javac debug="true"
           srcdir="${src.util.dir}"
           destdir="${bin.util.dir}"
           classpathref="run.jetty.path.id"
           includeantruntime="false" />
    <mkdir dir="${bin.test.unit.dir}" />
    <javac debug="true" destdir="${bin.test.unit.dir}" classpathref="run.test.path.id" includeantruntime="false">
      <src path="${src.test.unit.dir}" />
    </javac>

    <mkdir dir="${bin.test.component.dir}" />
    <javac debug="true" destdir="${bin.test.component.dir}" classpathref="run.test.path.id" includeantruntime="false">
      <src path="${src.test.component.dir}" />
    </javac>

    <mkdir dir="${bin.test.functional.dir}" />
    <javac debug="true" destdir="${bin.test.functional.dir}" classpathref="run.test.path.id" includeantruntime="false">
      <src path="${src.test.functional.dir}" />
    </javac>
  </target>

  <!-- generate the distribution -->
  <target name="dist" depends="create-war">
  </target>

  <!-- create WAR file with the apllication -->
  <target name="create-war" depends="compile">
    <echo message="Creating WAR for db.configuration=${db.configuration}" />
    <!-- Create the distribution directory -->
    <mkdir dir="${dist.war.dir}" />

    <war destfile="${dist.war.dir}/librarian.war" webxml="${resources.webinf.dir}/web.xml">
      <lib dir="${lib.app.dir}" />
      <classes dir="${bin.app.dir}" />
      <classes dir="${current.config.dir}/" />
      <webinf dir="${resources.webinf.dir}">
        <exclude name="web.xml" />
      </webinf>
    </war>
  </target>

  <target name="release"
          depends="clean, run-all-tests-and-reports-with-coverage, dist"
          description="run clean full build with compilation, testing, packaging, deployment, etc...">
  </target>

</project>